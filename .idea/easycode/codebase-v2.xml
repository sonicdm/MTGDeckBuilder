<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="com.obiscr.chatgpt.settings.EasyCodeState">
    <option name="projectFiles" value="$PROJECT_DIR$/atomic_json_files/AllPrintings.json;Z:/Scripts/MTGDecks/atomic_json_files/AtomicCards.json;Z:/Scripts/MTGDecks/logic/__init__.py;Z:/Scripts/MTGDecks/logic/data_logic.py;Z:/Scripts/MTGDecks/logic/inventory_logic.py;Z:/Scripts/MTGDecks/mtg_deck_builder/db/__init__.py;Z:/Scripts/MTGDecks/mtg_deck_builder/db/bootstrap.py;Z:/Scripts/MTGDecks/mtg_deck_builder/db/loader.py;Z:/Scripts/MTGDecks/mtg_deck_builder/db/models.py;Z:/Scripts/MTGDecks/mtg_deck_builder/db/repository.py;Z:/Scripts/MTGDecks/mtg_deck_builder/db/setup.py;Z:/Scripts/MTGDecks/mtg_deck_builder/models/__init__.py;Z:/Scripts/MTGDecks/mtg_deck_builder/models/card.py;Z:/Scripts/MTGDecks/mtg_deck_builder/models/card_database.py;Z:/Scripts/MTGDecks/mtg_deck_builder/models/card_metadata.py;Z:/Scripts/MTGDecks/mtg_deck_builder/models/card_set.py;Z:/Scripts/MTGDecks/mtg_deck_builder/models/cards.py;Z:/Scripts/MTGDecks/mtg_deck_builder/models/collection.py;Z:/Scripts/MTGDecks/mtg_deck_builder/models/deck.py;Z:/Scripts/MTGDecks/mtg_deck_builder/models/inventory.py;Z:/Scripts/MTGDecks/mtg_deck_builder/models/printings.py;Z:/Scripts/MTGDecks/mtg_deck_builder/scripts/__init__.py;Z:/Scripts/MTGDecks/mtg_deck_builder/scripts/init_db.py;Z:/Scripts/MTGDecks/mtg_deck_builder/templating/__init__.py;Z:/Scripts/MTGDecks/mtg_deck_builder/templating/card_filtering.py;Z:/Scripts/MTGDecks/mtg_deck_builder/templating/yaml_reader.py;Z:/Scripts/MTGDecks/mtg_deck_builder/utils/__init__.py;Z:/Scripts/MTGDecks/mtg_deck_builder/utils/conversion.py;Z:/Scripts/MTGDecks/mtg_deck_builder/utils/loader.py;Z:/Scripts/MTGDecks/mtg_deck_builder/__init__.py;Z:/Scripts/MTGDecks/mtg_deck_builder/data_loader.py;Z:/Scripts/MTGDecks/mtg_gradio_app/mtg_deck_builder/models/__init__.py;Z:/Scripts/MTGDecks/mtg_gradio_app/mtg_deck_builder/models/cards.py;Z:/Scripts/MTGDecks/mtg_gradio_app/mtg_deck_builder/models/collection.py;Z:/Scripts/MTGDecks/mtg_gradio_app/mtg_deck_builder/models/deck.py;Z:/Scripts/MTGDecks/mtg_gradio_app/mtg_deck_builder/models/inventory.py;Z:/Scripts/MTGDecks/mtg_gradio_app/mtg_deck_builder/data_loader.py;Z:/Scripts/MTGDecks/mtg_gradio_app/ui/__init__.py;Z:/Scripts/MTGDecks/mtg_gradio_app/ui/data_tab.py;Z:/Scripts/MTGDecks/mtg_gradio_app/ui/deck_tab.py;Z:/Scripts/MTGDecks/mtg_gradio_app/ui/inventory_tab.py;Z:/Scripts/MTGDecks/mtg_gradio_app/app_main.py;Z:/Scripts/MTGDecks/reference/10E.json;Z:/Scripts/MTGDecks/reference/AllPrintings.json;Z:/Scripts/MTGDecks/reference/AllPrintings_pretty.json;Z:/Scripts/MTGDecks/reference/AllPrintings_schema.json;Z:/Scripts/MTGDecks/reference/CardTypes.json;Z:/Scripts/MTGDecks/reference/introspectionSchema.json;Z:/Scripts/MTGDecks/reference/jskemator.py;Z:/Scripts/MTGDecks/tests/cards/sampleAtomicCards.json;Z:/Scripts/MTGDecks/tests/cards/test_all_printings.py;Z:/Scripts/MTGDecks/tests/cards/test_atomic_card.py;Z:/Scripts/MTGDecks/tests/cards/test_atomic_cards.py;Z:/Scripts/MTGDecks/tests/inventory/gpt_testing.py;Z:/Scripts/MTGDecks/tests/inventory/sampleAtomicCards.json;Z:/Scripts/MTGDecks/tests/inventory/test_collection.py;Z:/Scripts/MTGDecks/tests/inventory/test_collection_inventory_integration.py;Z:/Scripts/MTGDecks/tests/inventory/test_inventory.py;Z:/Scripts/MTGDecks/tests/sample_data/AllPrintings.json;Z:/Scripts/MTGDecks/tests/sample_data/AtomicCards.json;Z:/Scripts/MTGDecks/tests/sample_data/dmir.yaml;Z:/Scripts/MTGDecks/tests/sample_data/gruul.yaml;Z:/Scripts/MTGDecks/tests/sample_data/mono-red-aggro.yaml;Z:/Scripts/MTGDecks/tests/sample_data/sampleAtomicCards.json;Z:/Scripts/MTGDecks/tests/yaml_decks/test_read_yaml.py;Z:/Scripts/MTGDecks/tests/helpers.py;Z:/Scripts/MTGDecks/tests/test_full_integration.py;Z:/Scripts/MTGDecks/ui/__init__.py;Z:/Scripts/MTGDecks/ui/data_tab.py;Z:/Scripts/MTGDecks/ui/deck_tab.py;Z:/Scripts/MTGDecks/ui/inventory_tab.py;Z:/Scripts/MTGDecks/10E.json;Z:/Scripts/MTGDecks/AllPrintings_schema.json;Z:/Scripts/MTGDecks/app_main.py;Z:/Scripts/MTGDecks/azorius_collections_dump.json;Z:/Scripts/MTGDecks/BG full_card_metadata_collection.json;Z:/Scripts/MTGDecks/build_zip.py;Z:/Scripts/MTGDecks/BW full_card_metadata_collection.json;Z:/Scripts/MTGDecks/combined_collections_dump.json;Z:/Scripts/MTGDecks/DBTEST.py;Z:/Scripts/MTGDecks/dmir-deck.py;Z:/Scripts/MTGDecks/export.json;Z:/Scripts/MTGDecks/export_inventory_with_full_card_metadata.py;Z:/Scripts/MTGDecks/full_card_metadata_collection.json;Z:/Scripts/MTGDecks/gradiobuilder.py;Z:/Scripts/MTGDecks/gruul_collections_dump.json;Z:/Scripts/MTGDecks/inventory_to_json.py;Z:/Scripts/MTGDecks/pretty_json.py;Z:/Scripts/MTGDecks/README.md;Z:/Scripts/MTGDecks/setup.py;Z:/Scripts/MTGDecks/yaml_deck_filtering.py;Z:/Scripts/MTGDecks/yamlspecs.md" />
  </component>
</project>